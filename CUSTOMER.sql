CREATE DATABASE EXERCISE;
CREATE TABLE CUSTOMER(CUSTOMER_ID INT PRIMARY KEY,
NAME VARCHAR(30), 
CITY VARCHAR(30),
GRADE INT,
SALESMAN_ID INT);


INSERT INTO CUSTOMER VALUES(101,"BHARATH","CHENNAI",67,567),(102,"ANSER","KADIRI",45,432),
(103,"BHEEMA","ANATAPUR",45,678),(104,"JASWANTH","HYDERABAD",65,678),
(105,"HARI","ANATAPUR",323,543),(106,"HARI","DELHI",654,780),(107,"BADRI","GOA",543,543),
(100,"YASWANTH","KADAPA",76,098),(108,"JOEL","NANDYAL",678,567);

SELECT * FROM CUSTOMER;

-- WRITE A SQL QUERY TO FIND OUT THE DETAILS OF THE CUSTOMER WHOSE GRADE ARE ABOVE 100?
SELECT * FROM CUSTOMER WHERE GRADE >100;
-- WRITE A SQL QUERY TO FIND OUT THE DETAILS OF THE CUSTOMER WHOSE GRADE ARE ABOVE 100 AND EQUAL TO 100?
SELECT * FROM CUSTOMER WHERE GRADE >=100;
-- WRITE A SQL QUERY TO FIND OUT THE DETAILS OF THE CUSTOMER WHOSE GRADE ARE ABOVE 100 AND EQUAL TO 100 AND
-- IN ASCENDING ORDER
SELECT * FROM CUSTOMER WHERE GRADE >=100  ORDER BY  GRADE ASC;

-- SQL QUERY TO FIND THE DETAILS OF THE CUSTOMER WHOSE GRADE IS LESSTHAN OR EQUAL TO 100 AND LIVING IN HYDERABAD
SELECT * FROM CUSTOMER WHERE CITY="HYDERABAD" AND GRADE <=100;
-- SQL QUERY TO FIND THE DETAILS OF THE CUSTOMER WHOSE GRADE IS GREATERTHAN 100 OR LIVING IN ANANTAPUR
SELECT * FROM CUSTOMER WHERE CITY="ANANTAPUR" OR GRADE >100;
-- WRITE AN SQL QUERY TO FIND WHO ARE EITHER FROM THE KADIRI OR WHOM DONT HAVE A GRADE MORETHAN 100
SELECT * FROM CUSTOMER WHERE CITY="KADIRI" OR NOT GRADE < 100;
-- WRITE AN SQL QUERY TO FIND WHO DO NOT BELONG TO THE CITY MUMBAI OR HAVE A GRADE THAT EXCEED 200
SELECT * FROM CUSTOMER WHERE GRADE > 200 OR NOT CITY= "KADIRI";

SELECT * FROM CUSTOMER;





CREATE TABLE ORDERS(ORDER_NUM INT,
PURCHASE_AMT INT,ORDER_DATE DATE,CUSTOMER_ID INT,SALESMAN_ID INT
);
INSERT INTO ORDERS VALUES(2002,1000,'2023-04-22',100,200),(3023,1200,'2023-04-30',342,423),(1432,1342,'2023-04-02',2302,3232),(23323,543,'2023-04-30',543,654);


-- FIND THE ORDER DETAILS EXCLUDING THE DATE 30-04-2023 AND SALESMAN_ID MORETHAN 500 OR PURCHASE PURCHASE_AMT GREATER THAN 100
select * from order_num where not order_date ='2023-04-03' and salesman_id>100 or purchase_amt>1000;
SELECT * FROM ORDER_NUM WHERE ORDER_DATE = '2023-04-03' AND SALESMAN_ID>3000 OR PURCHASE_AMT >1000;
SELECT * FROM ORDERS;







CREATE TABLE SALESMAN(
SALESMAN_ID INT PRIMARY KEY, NAME VARCHAR(30),CITY VARCHAR(30),COMMISSION FLOAT
);
INSERT INTO SALESMAN VALUES(5432,"BHARATH","KADIRI",89.9);
INSERT INTO SALESMAN VALUES(5434,"PAWAN","ANANTAPUR",876.8);
INSERT INTO SALESMAN VALUES(5435,"RAMU","KURNOOL",654.9);
INSERT INTO SALESMAN VALUES(5436,"JASWANTH","KADAPA",34.7);
INSERT INTO SALESMAN VALUES(5437,"BHEEMA","VIJAYAWADA",82.4);
INSERT INTO SALESMAN VALUES(5438,"JASWANTH","HYDERABAD",39.9);

SELECT * FROM SALESMAN;
SELECT NAME FROM SALESMAN WHERE NAME LIKE "B%";
-- CREATE A NEW COLUMN ADDRESS,INSERT SOME DATA IN THAT ADDRESS COLUMN AND DISPLAY ALL THOSE ADDRESS AS SALESMAN_ADDRESS IN DESCENDING ORDER
ALTER TABLE SALESMAN ADD ADDRESS VARCHAR(40);
UPDATE SALESMAN SET ADDRESS="9-86,A VILLAGE" WHERE NAME = "BHARATH";
UPDATE SALESMAN SET ADDRESS="DUEL NAGAR" WHERE NAME = "PAWAN";
UPDATE SALESMAN SET ADDRESS="BINAARY NAGAR" WHERE NAME = "RAMU";
UPDATE SALESMAN SET ADDRESS="PURI NAGAR" WHERE NAME = "JASWANTH";
UPDATE SALESMAN SET ADDRESS="GANGHI NAGAR" WHERE NAME = "BHEEMA";

-- ALLIASING .HERE ADDRESS IS USED AS SALESMAN_ADDRESS USING THE KEYWORD AS
SELECT ADDRESS AS SALESMAN_ADDRESS FROM SALESMAN ORDER BY ADDRESS DESC;